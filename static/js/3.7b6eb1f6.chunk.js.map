{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Components/Header.js","Components/ListingTile.js","Modules/ListingPage/ListingPageView.js","Modules/ListingPage/ListingPageContainer.js","Services/ListingServices.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","Header","imgstyle","height","className","alt","src","process","style","type","ListingTile","post","textAlign","padding","marginTop","maxHeight","name","containerStyle","maxWidth","margin","ListingPageView","props","useState","page","setPage","loader","useRef","useEffect","observer","IntersectionObserver","handleObserver","root","rootMargin","threshold","current","observe","loadList","entities","isIntersecting","postList","map","index","ref","ListingPageContainer","useSelector","state","updateList","list","dispatch","useDispatch","fetch","headers","then","res","json","listItem","newList","content","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties"],"mappings":"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","file":"static/js/3.7b6eb1f6.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react'\n\nconst Header = () => {\n\n  const imgstyle = {\n    height: '20px'\n  }\n  return <div className=\"flex m-3\">\n    <div className=\"flex-none w-16 h-16 \">\n      <img alt=\"back\" src={`${process.env.PUBLIC_URL}/Back.png`} style={imgstyle} />\n    </div>\n    <div className=\"flex-grow h-16 text-white\">\n      Romantic Comedy\n    </div>\n    <div className=\"flex-none w-16 h-16 \">\n      <button type='button'><img src={`${process.env.PUBLIC_URL}/search.png`} alt=\"back\" style={imgstyle} /></button>\n    </div>\n  </div>\n\n}\n\nexport default Header","\n\nconst ListingTile=({post})=>{\n\n    const divStyle = {\n        height: '200px',\n        textAlign: 'center',\n        padding: '5px 10px',\n        marginTop: '15px',\n\n    };\n    const imgstyle = {\n        maxHeight:'-webkit-fill-available'\n    }\nreturn <div className=\"post gap-4 bg-black\" style={divStyle}>\n    <img alt=\"back\" src={`${process.env.PUBLIC_URL}/${post[\"poster-image\"]}`} style={imgstyle}/>\n<h6 className='text-white text-sm'> {post.name } </h6>\n</div>\n\n}\n\nexport default ListingTile","import React, { useEffect, useState, useRef } from 'react';\nimport Header from '../../Components/Header';\nimport ListingTile from '../../Components/ListingTile';\n\n\n\nconst containerStyle = {\n    maxWidth: '1280px',\n    margin: '0 auto',\n}\nconst ListingPageView = (props) => {\n\n    // tracking on which page we currently are\n    const [page, setPage] = useState(1);\n    // add loader refrence\n    const loader = useRef(null);\n\n    useEffect(() => {\n        var options = {\n            root: null,\n            rootMargin: \"20px\",\n            threshold: 1.0\n        };\n        // initialize IntersectionObserver\n        // and attaching to Load More div\n        const observer = new IntersectionObserver(handleObserver, options);\n        if (loader.current) {\n            observer.observe(loader.current)\n        }\n\n    }, []);\n\n\n    useEffect(() => {\n\n        page < 4 && props.loadList(page)\n        // eslint-disable-next-line\n    }, [page])\n\n    // here we handle what happens when user scrolls to Load More div\n    // in this case we just update page variable\n    const handleObserver = (entities) => {\n        const target = entities[0];\n        if (target.isIntersecting) {\n            setPage((page) => page + 1)\n        }\n    }\n\n\n    return (<div className=\"container\" style={containerStyle}>\n        <Header />\n        <div className=\"grid grid-cols-3 gap-4\">\n\n\n            {\n                props.postList.map((post, index) => <ListingTile key={index} post={post} />)\n            }\n\n            <div className=\"loading\" ref={loader}>\n\n            </div>\n        </div>\n    </div>)\n}\n\nexport default ListingPageView;","import ListingPageView from \"./ListingPageView\"\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { listItem } from '../../Services/ListingServices';\nimport { updateList } from \"../../Core/Reducer\";\nconst ListingPageContainer = () => {\n\n    const postList = useSelector((state) => state.updateList.list)\n    const dispatch = useDispatch()\n    const loadList = page => {\n        listItem(page).then(res => {\n            const newList = res?.page[\"content-items\"]?.content\n            dispatch(updateList(newList))\n        })\n    }\n    const props = {\n        postList: postList || [],\n\n        loadList\n    }\n    return <ListingPageView {...props} />\n}\n\nexport default ListingPageContainer","\n\nexport const listItem = page => fetch(`CONTENTLISTINGPAGE-PAGE${page}.json`, {\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n}).then(res => res.json());\n\n"],"sourceRoot":""}