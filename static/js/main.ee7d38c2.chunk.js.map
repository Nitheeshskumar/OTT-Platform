{"version":3,"sources":["Core/Reducer.js","reportWebVitals.js","Core/Store.js","Core/Routes.js","index.js"],"names":["RootReducer","createSlice","name","initialState","list","reducers","updateList","state","action","console","log","payload","actions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ListingPageContainer","React","lazy","RootRoutes","fallback","path","element","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"wJAEaA,EAAcC,YAAY,CACrCC,KAAM,WACNC,aAAc,CACZC,KAAM,IAERC,SAAU,CAERC,WAAY,SAACC,EAAOC,GAClBC,QAAQC,IAAIH,EAAO,MAAOC,GAC1BD,EAAMH,KAAN,sBAAiBG,EAAMH,MAAvB,YAAgCI,EAAOG,cAM9BL,EAAeN,EAAYY,QAA3BN,WAEAN,MAAf,S,gGCPea,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,uBCJCQ,cAAe,CAC5BC,QAAS,CACPjB,WAAYA,O,sBCCVkB,EAAuBC,IAAMC,MAAK,kBAAM,gCAG/B,SAASC,IACpB,OACI,cAAC,IAAD,UACI,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,KAAK,gBAAgBC,QAAS,cAACN,EAAD,YCLzDO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BvB,M","file":"static/js/main.ee7d38c2.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const RootReducer = createSlice({\n  name: 'postList',\n  initialState: {\n    list: [],\n  },\n  reducers: {\n\n    updateList: (state, action) => {\n      console.log(state, 'dfd', action)\n      state.list = [...state.list, ...action.payload]\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { updateList } = RootReducer.actions\n\nexport default RootReducer.reducer","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport updateList from './Reducer'\n\nexport default configureStore({\n  reducer: {\n    updateList: updateList,\n  },\n})","import React, { Suspense } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route\n} from \"react-router-dom\";\nconst ListingPageContainer = React.lazy(() => import('../Modules/ListingPage/ListingPageContainer'))\n\n\nexport default function RootRoutes() {\n    return (\n        <Router>\n            <Suspense fallback={<div>Loading...</div>}>\n                <Routes>\n                    <Route path=\"/OTT-Platform\" element={<ListingPageContainer />} />\n                </Routes>\n            </Suspense>\n        </Router>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux'\nimport store from './Core/Store'\nimport Route from './Core/Routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Route />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}