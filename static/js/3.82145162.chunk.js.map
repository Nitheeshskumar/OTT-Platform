{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Components/Header.js","Components/ListingTile.js","Modules/ListingPage/ListingPageView.js","Modules/ListingPage/ListingPageContainer.js","Services/ListingServices.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","Header","imgstyle","height","class","alt","src","style","type","ListingTile","post","className","textAlign","padding","marginTop","maxHeight","name","containerStyle","maxWidth","margin","ListingPageView","props","useState","page","setPage","loader","useRef","useEffect","observer","IntersectionObserver","handleObserver","root","rootMargin","threshold","current","observe","loadList","entities","isIntersecting","postList","map","index","ref","ListingPageContainer","useSelector","state","updateList","list","dispatch","useDispatch","console","log","fetch","headers","then","res","json","listItem","newList","content","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties"],"mappings":"mGAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,E,gCCQMQ,EAnBF,WAEb,IAAMC,EAAS,CACXC,OAAO,QAEP,OAAQ,sBAAKC,MAAM,WAAX,UACV,qBAAKA,MAAM,0BAAX,SACA,qBAAKC,IAAI,OAAOC,IAAI,WAAWC,MAAOL,MAEtC,qBAAKE,MAAM,4BAAX,6BAGA,qBAAKA,MAAM,0BAAX,SACA,wBAAQI,KAAK,SAAb,SAAsB,qBAAMF,IAAI,aAAaD,IAAI,OAAOE,MAAOL,YCMlDO,EAnBG,SAAC,GAAU,IAATC,EAAQ,EAARA,KAYpB,OAAO,sBAAKC,UAAU,sBAAsBJ,MAVvB,CACbJ,OAAQ,QACRS,UAAW,SACXC,QAAS,WACTC,UAAW,QAMZ,UACH,qBAAKT,IAAI,OAAOC,IAAKI,EAAK,gBAAiBH,MAJ1B,CACbQ,UAAU,4BAIlB,qBAAIJ,UAAU,qBAAd,cAAqCD,EAAKM,KAA1C,WCVMC,EAAiB,CACnBC,SAAU,SACVC,OAAQ,UAyDGC,EAvDS,SAACC,GAGrB,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAASC,iBAAO,MAEtBC,qBAAU,WACL,IAOMC,EAAW,IAAIC,qBAAqBC,EAP5B,CACXC,KAAM,KACNC,WAAY,OACZC,UAAW,IAKVR,EAAOS,SACRN,EAASO,QAAQV,EAAOS,WAG7B,IAGHP,qBAAU,WAENJ,EAAK,GAAIF,EAAMe,SAASb,KAEzB,CAACA,IAIJ,IAAMO,EAAiB,SAACO,GACLA,EAAS,GACbC,gBACPd,GAAQ,SAACD,GAAD,OAAUA,EAAO,MAKjC,OAAQ,sBAAKZ,UAAU,YAAYJ,MAAOU,EAAlC,UACZ,cAAC,EAAD,IACQ,sBAAKN,UAAU,yBAAf,UAIQU,EAAMkB,SAASC,KAAI,SAAC9B,EAAM+B,GAAP,OAAiB,cAAC,EAAD,CAAyB/B,KAAMA,GAAb+B,MAG1D,qBAAK9B,UAAU,UAAU+B,IAAKjB,W,gBClC3BkB,UAnBY,WAEvB,IAAMJ,EAAWK,aAAY,SAACC,GAAD,OAAWA,EAAMC,WAAWC,QACrDC,EAAWC,cAOnBC,QAAQC,IAAIZ,GACR,IAAMlB,EAAO,CACTkB,SAASA,GAAU,GAEnBH,SAVW,SAAAb,ICPG,SAAAA,GAAI,OAAE6B,MAAM,0BAAD,OAA2B7B,EAA3B,SAAuC,CACpE8B,QAAU,CACR,eAAgB,mBAChB,OAAU,sBAEXC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WDGbC,CAASlC,GAAM+B,MAAK,SAAAC,GAAM,IAAD,EACfG,EAAO,OAAEH,QAAF,IAAEA,GAAF,UAAEA,EAAKhC,KAAK,wBAAZ,aAAE,EAA4BoC,QAC3CX,EAASF,YAAWY,SAS5B,OAAO,cAAC,EJLG,SAAwBE,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNvE,EAAQL,OAAO+E,IAAS,GAAMC,SAAQ,SAAUlF,GAC9C,EAAe6E,EAAQ7E,EAAKiF,EAAOjF,OAE5BE,OAAOiF,0BAChBjF,OAAOkF,iBAAiBP,EAAQ3E,OAAOiF,0BAA0BF,IAEjE1E,EAAQL,OAAO+E,IAASC,SAAQ,SAAUlF,GACxCE,OAAOC,eAAe0E,EAAQ7E,EAAKE,OAAOa,yBAAyBkE,EAAQjF,OAKjF,OAAO6E,EIZE,IAAqBvC","file":"static/js/3.82145162.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react'\n\nconst Header=()=>{\n\nconst imgstyle={\n    height:'20px'\n}\n    return  <div class=\"flex ...\">\n  <div class=\"flex-none w-16 h-16 ...\">\n  <img alt=\"back\" src=\"Back.png\" style={imgstyle}/>\n  </div>\n  <div class=\"flex-grow h-16 text-white\">\n  Romantic Comedy\n  </div>\n  <div class=\"flex-none w-16 h-16 ...\">\n  <button type='button'><img  src='search.png' alt=\"back\" style={imgstyle} /></button>\n  </div>\n</div>\n\n}\n\nexport default Header","\n\nconst ListingTile=({post})=>{\n\n    const divStyle = {\n        height: '200px',\n        textAlign: 'center',\n        padding: '5px 10px',\n        marginTop: '15px',\n\n    };\n    const imgstyle = {\n        maxHeight:'-webkit-fill-available'\n    }\nreturn <div className=\"post gap-4 bg-black\" style={divStyle}>\n    <img alt=\"back\" src={post[\"poster-image\"]} style={imgstyle}/>\n<h6 className='text-white text-sm'> {post.name } </h6>\n</div>\n\n}\n\nexport default ListingTile","import React, { useEffect, useState, useRef  } from 'react';\nimport Header from '../../Components/Header';\nimport ListingTile from '../../Components/ListingTile';\n\n\n\nconst containerStyle = {\n    maxWidth: '1280px',\n    margin: '0 auto',\n}\nconst ListingPageView = (props) => {\n\n    // tracking on which page we currently are\n    const [page, setPage] = useState(1);\n    // add loader refrence\n    const loader = useRef(null);\n\n    useEffect(() => {\n         var options = {\n            root: null,\n            rootMargin: \"20px\",\n            threshold: 1.0\n         };\n        // initialize IntersectionObserver\n        // and attaching to Load More div\n         const observer = new IntersectionObserver(handleObserver, options);\n         if (loader.current) {\n            observer.observe(loader.current)\n         }\n\n    }, [ ]);\n\n\n    useEffect(() => {\n\n        page<4&& props.loadList(page)\n // eslint-disable-next-line\n    }, [page])\n\n    // here we handle what happens when user scrolls to Load More div\n   // in this case we just update page variable\n    const handleObserver = (entities) => {\n        const target = entities[0];\n        if (target.isIntersecting) {\n            setPage((page) => page + 1)\n        }\n    }\n\n\n    return (<div className=\"container\" style={containerStyle}>\n<Header/>\n        <div className=\"grid grid-cols-3 gap-4\">\n\n\n            {\n                props.postList.map((post, index) => <ListingTile key={index} post={post}/>)\n            }\n\n            <div className=\"loading\" ref={loader}>\n\n           </div>\n        </div>\n    </div>)\n}\n\nexport default ListingPageView;","import ListingPageView from \"./ListingPageView\"\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { listItem } from '../../Services/ListingServices';\nimport { updateList } from \"../../Core/Reducer\";\nconst ListingPageContainer=()=>{\n\n    const postList = useSelector((state) => state.updateList.list)\n  const dispatch = useDispatch()\n    const loadList=page=>{\n        listItem(page).then(res=>{\n            const newList= res?.page[\"content-items\"]?.content\n            dispatch(updateList(newList))\n        })\n    }\nconsole.log(postList)\n    const props= {\n        postList:postList||[],\n\n        loadList\n    }\n    return <ListingPageView {...props} />\n}\n\nexport default ListingPageContainer","\n\nexport const listItem=page=>fetch(`CONTENTLISTINGPAGE-PAGE${page}.json`,{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(res => res.json());\n\n"],"sourceRoot":""}